# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sd_product_targeting_recommendations_success_v34 import SDProductTargetingRecommendationsSuccessV34

class TestSDProductTargetingRecommendationsSuccessV34(unittest.TestCase):
    """SDProductTargetingRecommendationsSuccessV34 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SDProductTargetingRecommendationsSuccessV34:
        """Test SDProductTargetingRecommendationsSuccessV34
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SDProductTargetingRecommendationsSuccessV34`
        """
        model = SDProductTargetingRecommendationsSuccessV34()
        if include_optional:
            return SDProductTargetingRecommendationsSuccessV34(
                code = '200',
                name = '',
                expression = [
                    openapi_client.models.sd_product_targeting_theme_expression.SDProductTargetingThemeExpression(
                        type = 'asinPriceGreaterThan', )
                    ],
                recommendations = [
                    openapi_client.models.sd_product_recommendation_v32.SDProductRecommendationV32(
                        asin = 'B00PN11UNW', 
                        rank = 1, 
                        advertised_asins = [
                            'B00PN11UNW'
                            ], )
                    ]
            )
        else:
            return SDProductTargetingRecommendationsSuccessV34(
        )
        """

    def testSDProductTargetingRecommendationsSuccessV34(self):
        """Test SDProductTargetingRecommendationsSuccessV34"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
