# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sd_targeting_recommendations_request_v31 import SDTargetingRecommendationsRequestV31

class TestSDTargetingRecommendationsRequestV31(unittest.TestCase):
    """SDTargetingRecommendationsRequestV31 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SDTargetingRecommendationsRequestV31:
        """Test SDTargetingRecommendationsRequestV31
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SDTargetingRecommendationsRequestV31`
        """
        model = SDTargetingRecommendationsRequestV31()
        if include_optional:
            return SDTargetingRecommendationsRequestV31(
                tactic = 'T00020',
                products = [
                    openapi_client.models.sd_goal_product.SDGoalProduct(
                        asin = 'B00PN11UNW', )
                    ],
                type_filter = ["PRODUCT","CATEGORY"]
            )
        else:
            return SDTargetingRecommendationsRequestV31(
                tactic = 'T00020',
                products = [
                    openapi_client.models.sd_goal_product.SDGoalProduct(
                        asin = 'B00PN11UNW', )
                    ],
                type_filter = ["PRODUCT","CATEGORY"],
        )
        """

    def testSDTargetingRecommendationsRequestV31(self):
        """Test SDTargetingRecommendationsRequestV31"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
