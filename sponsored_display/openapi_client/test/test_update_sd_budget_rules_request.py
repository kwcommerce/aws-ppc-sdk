# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_sd_budget_rules_request import UpdateSDBudgetRulesRequest

class TestUpdateSDBudgetRulesRequest(unittest.TestCase):
    """UpdateSDBudgetRulesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateSDBudgetRulesRequest:
        """Test UpdateSDBudgetRulesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateSDBudgetRulesRequest`
        """
        model = UpdateSDBudgetRulesRequest()
        if include_optional:
            return UpdateSDBudgetRulesRequest(
                budget_rules_details = [
                    openapi_client.models.sd_budget_rule.SDBudgetRule(
                        rule_state = 'ACTIVE', 
                        last_updated_date = 1.337, 
                        created_date = 1.337, 
                        rule_details = openapi_client.models.sd_budget_rule_details.SDBudgetRuleDetails(
                            duration = openapi_client.models.rule_duration.RuleDuration(
                                event_type_rule_duration = openapi_client.models.event_type_rule_duration.EventTypeRuleDuration(
                                    event_id = '', 
                                    end_date = '', 
                                    event_name = '', 
                                    start_date = '', ), 
                                date_range_type_rule_duration = openapi_client.models.date_range_type_rule_duration.DateRangeTypeRuleDuration(
                                    end_date = '', 
                                    start_date = '', ), ), 
                            recurrence = openapi_client.models.recurrence.Recurrence(
                                type = 'DAILY', 
                                days_of_week = [
                                    'MONDAY'
                                    ], 
                                intra_day_schedule = [
                                    openapi_client.models.time_of_day.timeOfDay(
                                        start_time = '', 
                                        end_time = '', )
                                    ], ), 
                            rule_type = 'SCHEDULE', 
                            budget_increase_by = openapi_client.models.budget_increase_by.budgetIncreaseBy(
                                type = 'PERCENT', 
                                value = 1.337, ), 
                            name = '', 
                            performance_measure_condition = openapi_client.models.performance_measure_condition.PerformanceMeasureCondition(
                                metric_name = 'ACOS', 
                                comparison_operator = 'GREATER_THAN', 
                                threshold = 1.337, ), ), 
                        rule_id = '', 
                        rule_status = '', )
                    ]
            )
        else:
            return UpdateSDBudgetRulesRequest(
        )
        """

    def testUpdateSDBudgetRulesRequest(self):
        """Test UpdateSDBudgetRulesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
