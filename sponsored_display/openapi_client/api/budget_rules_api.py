# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictFloat, StrictInt, StrictStr
from typing import Optional, Union
from typing_extensions import Annotated
from openapi_client.models.create_budget_rules_response import CreateBudgetRulesResponse
from openapi_client.models.create_sd_budget_rules_request import CreateSDBudgetRulesRequest
from openapi_client.models.get_sd_budget_rule_response import GetSDBudgetRuleResponse
from openapi_client.models.get_sd_budget_rules_for_advertiser_response import GetSDBudgetRulesForAdvertiserResponse
from openapi_client.models.update_budget_rules_response import UpdateBudgetRulesResponse
from openapi_client.models.update_sd_budget_rules_request import UpdateSDBudgetRulesRequest

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class BudgetRulesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def create_budget_rules_for_sd_campaigns(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        create_sd_budget_rules_request: CreateSDBudgetRulesRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CreateBudgetRulesResponse:
        """Creates one or more budget rules.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param create_sd_budget_rules_request: (required)
        :type create_sd_budget_rules_request: CreateSDBudgetRulesRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_budget_rules_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            create_sd_budget_rules_request=create_sd_budget_rules_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "CreateBudgetRulesResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def create_budget_rules_for_sd_campaigns_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        create_sd_budget_rules_request: CreateSDBudgetRulesRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CreateBudgetRulesResponse]:
        """Creates one or more budget rules.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param create_sd_budget_rules_request: (required)
        :type create_sd_budget_rules_request: CreateSDBudgetRulesRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_budget_rules_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            create_sd_budget_rules_request=create_sd_budget_rules_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "CreateBudgetRulesResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def create_budget_rules_for_sd_campaigns_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        create_sd_budget_rules_request: CreateSDBudgetRulesRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Creates one or more budget rules.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param create_sd_budget_rules_request: (required)
        :type create_sd_budget_rules_request: CreateSDBudgetRulesRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_budget_rules_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            create_sd_budget_rules_request=create_sd_budget_rules_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "CreateBudgetRulesResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _create_budget_rules_for_sd_campaigns_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        create_sd_budget_rules_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter
        if create_sd_budget_rules_request is not None:
            _body_params = create_sd_budget_rules_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sd/budgetRules',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_budget_rule_by_rule_id_for_sd_campaigns(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        budget_rule_id: Annotated[StrictStr, Field(description="The budget rule identifier.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GetSDBudgetRuleResponse:
        """Gets a budget rule specified by identifier.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param budget_rule_id: The budget rule identifier. (required)
        :type budget_rule_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_budget_rule_by_rule_id_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            budget_rule_id=budget_rule_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetSDBudgetRuleResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_budget_rule_by_rule_id_for_sd_campaigns_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        budget_rule_id: Annotated[StrictStr, Field(description="The budget rule identifier.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GetSDBudgetRuleResponse]:
        """Gets a budget rule specified by identifier.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param budget_rule_id: The budget rule identifier. (required)
        :type budget_rule_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_budget_rule_by_rule_id_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            budget_rule_id=budget_rule_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetSDBudgetRuleResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_budget_rule_by_rule_id_for_sd_campaigns_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        budget_rule_id: Annotated[StrictStr, Field(description="The budget rule identifier.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a budget rule specified by identifier.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param budget_rule_id: The budget rule identifier. (required)
        :type budget_rule_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_budget_rule_by_rule_id_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            budget_rule_id=budget_rule_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetSDBudgetRuleResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_budget_rule_by_rule_id_for_sd_campaigns_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        budget_rule_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if budget_rule_id is not None:
            _path_params['budgetRuleId'] = budget_rule_id
        # process the query parameters
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sd/budgetRules/{budgetRuleId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_sd_budget_rules_for_advertiser(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        page_size: Annotated[Union[StrictFloat, StrictInt], Field(description="Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.")],
        next_token: Annotated[Optional[StrictStr], Field(description="To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GetSDBudgetRulesForAdvertiserResponse:
        """Get all budget rules created by an advertiser


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param page_size: Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30. (required)
        :type page_size: float
        :param next_token: To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
        :type next_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_sd_budget_rules_for_advertiser_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            page_size=page_size,
            next_token=next_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetSDBudgetRulesForAdvertiserResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_sd_budget_rules_for_advertiser_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        page_size: Annotated[Union[StrictFloat, StrictInt], Field(description="Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.")],
        next_token: Annotated[Optional[StrictStr], Field(description="To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GetSDBudgetRulesForAdvertiserResponse]:
        """Get all budget rules created by an advertiser


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param page_size: Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30. (required)
        :type page_size: float
        :param next_token: To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
        :type next_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_sd_budget_rules_for_advertiser_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            page_size=page_size,
            next_token=next_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetSDBudgetRulesForAdvertiserResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_sd_budget_rules_for_advertiser_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        page_size: Annotated[Union[StrictFloat, StrictInt], Field(description="Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.")],
        next_token: Annotated[Optional[StrictStr], Field(description="To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get all budget rules created by an advertiser


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param page_size: Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30. (required)
        :type page_size: float
        :param next_token: To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
        :type next_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_sd_budget_rules_for_advertiser_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            page_size=page_size,
            next_token=next_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GetSDBudgetRulesForAdvertiserResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_sd_budget_rules_for_advertiser_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        page_size,
        next_token,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if next_token is not None:
            
            _query_params.append(('nextToken', next_token))
            
        if page_size is not None:
            
            _query_params.append(('pageSize', page_size))
            
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sd/budgetRules',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def update_budget_rules_for_sd_campaigns(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        update_sd_budget_rules_request: UpdateSDBudgetRulesRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> UpdateBudgetRulesResponse:
        """Update one or more budget rules.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param update_sd_budget_rules_request: (required)
        :type update_sd_budget_rules_request: UpdateSDBudgetRulesRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_budget_rules_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            update_sd_budget_rules_request=update_sd_budget_rules_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "UpdateBudgetRulesResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def update_budget_rules_for_sd_campaigns_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        update_sd_budget_rules_request: UpdateSDBudgetRulesRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[UpdateBudgetRulesResponse]:
        """Update one or more budget rules.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param update_sd_budget_rules_request: (required)
        :type update_sd_budget_rules_request: UpdateSDBudgetRulesRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_budget_rules_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            update_sd_budget_rules_request=update_sd_budget_rules_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "UpdateBudgetRulesResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def update_budget_rules_for_sd_campaigns_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.")],
        update_sd_budget_rules_request: UpdateSDBudgetRulesRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update one or more budget rules.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API. (required)
        :type amazon_advertising_api_scope: str
        :param update_sd_budget_rules_request: (required)
        :type update_sd_budget_rules_request: UpdateSDBudgetRulesRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_budget_rules_for_sd_campaigns_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            update_sd_budget_rules_request=update_sd_budget_rules_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "UpdateBudgetRulesResponse",
            '400': "BudgetRuleError",
            '401': "BudgetRuleError",
            '403': "BudgetRuleError",
            '422': "BudgetRuleError",
            '429': "BudgetRuleError",
            '500': "BudgetRuleError",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _update_budget_rules_for_sd_campaigns_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        update_sd_budget_rules_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter
        if update_sd_budget_rules_request is not None:
            _body_params = update_sd_budget_rules_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/sd/budgetRules',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


