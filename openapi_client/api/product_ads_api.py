# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr, field_validator
from typing import List, Optional
from typing_extensions import Annotated
from openapi_client.models.create_product_ad import CreateProductAd
from openapi_client.models.product_ad import ProductAd
from openapi_client.models.product_ad_response import ProductAdResponse
from openapi_client.models.product_ad_response_ex import ProductAdResponseEx
from openapi_client.models.update_product_ad import UpdateProductAd

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ProductAdsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def archive_product_ad(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the produce ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProductAdResponse:
        """Sets the status of a sproduct ad to archived.

        This operation is equivalent to an update operation that sets the status field to 'archived'. Note that setting the status field to 'archived' is permanent and can't be undone. See [Developer Notes](https://advertising.amazon.com/API/docs/en-us/info/developer-notes#archiving) for more information.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the produce ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._archive_product_ad_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAdResponse",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def archive_product_ad_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the produce ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProductAdResponse]:
        """Sets the status of a sproduct ad to archived.

        This operation is equivalent to an update operation that sets the status field to 'archived'. Note that setting the status field to 'archived' is permanent and can't be undone. See [Developer Notes](https://advertising.amazon.com/API/docs/en-us/info/developer-notes#archiving) for more information.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the produce ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._archive_product_ad_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAdResponse",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def archive_product_ad_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the produce ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Sets the status of a sproduct ad to archived.

        This operation is equivalent to an update operation that sets the status field to 'archived'. Note that setting the status field to 'archived' is permanent and can't be undone. See [Developer Notes](https://advertising.amazon.com/API/docs/en-us/info/developer-notes#archiving) for more information.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the produce ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._archive_product_ad_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAdResponse",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _archive_product_ad_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        ad_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if ad_id is not None:
            _path_params['adId'] = ad_id
        # process the query parameters
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/sd/productAds/{adId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def create_product_ads(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        create_product_ad: Annotated[Optional[List[CreateProductAd]], Field(description="An array of ProductAd objects. For each object, specify required fields and their values. Required fields are `adGroupId` and `state`. Within any campaign, you must pass consistent fields of either `asin` (for vendors), `sku` (for sellers), or `landingPageUrl` (when linking to other pages), these cannot be mixed for any given campaign. Maximum length of the array is 100 objects.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ProductAdResponse]:
        """Creates one or more product ads.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param create_product_ad: An array of ProductAd objects. For each object, specify required fields and their values. Required fields are `adGroupId` and `state`. Within any campaign, you must pass consistent fields of either `asin` (for vendors), `sku` (for sellers), or `landingPageUrl` (when linking to other pages), these cannot be mixed for any given campaign. Maximum length of the array is 100 objects.
        :type create_product_ad: List[CreateProductAd]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            create_product_ad=create_product_ad,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "List[ProductAdResponse]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def create_product_ads_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        create_product_ad: Annotated[Optional[List[CreateProductAd]], Field(description="An array of ProductAd objects. For each object, specify required fields and their values. Required fields are `adGroupId` and `state`. Within any campaign, you must pass consistent fields of either `asin` (for vendors), `sku` (for sellers), or `landingPageUrl` (when linking to other pages), these cannot be mixed for any given campaign. Maximum length of the array is 100 objects.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ProductAdResponse]]:
        """Creates one or more product ads.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param create_product_ad: An array of ProductAd objects. For each object, specify required fields and their values. Required fields are `adGroupId` and `state`. Within any campaign, you must pass consistent fields of either `asin` (for vendors), `sku` (for sellers), or `landingPageUrl` (when linking to other pages), these cannot be mixed for any given campaign. Maximum length of the array is 100 objects.
        :type create_product_ad: List[CreateProductAd]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            create_product_ad=create_product_ad,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "List[ProductAdResponse]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def create_product_ads_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        create_product_ad: Annotated[Optional[List[CreateProductAd]], Field(description="An array of ProductAd objects. For each object, specify required fields and their values. Required fields are `adGroupId` and `state`. Within any campaign, you must pass consistent fields of either `asin` (for vendors), `sku` (for sellers), or `landingPageUrl` (when linking to other pages), these cannot be mixed for any given campaign. Maximum length of the array is 100 objects.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Creates one or more product ads.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param create_product_ad: An array of ProductAd objects. For each object, specify required fields and their values. Required fields are `adGroupId` and `state`. Within any campaign, you must pass consistent fields of either `asin` (for vendors), `sku` (for sellers), or `landingPageUrl` (when linking to other pages), these cannot be mixed for any given campaign. Maximum length of the array is 100 objects.
        :type create_product_ad: List[CreateProductAd]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            create_product_ad=create_product_ad,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "List[ProductAdResponse]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _create_product_ads_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        create_product_ad,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'CreateProductAd': '',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter
        if create_product_ad is not None:
            _body_params = create_product_ad


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/sd/productAds',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_product_ad(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the requested product ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProductAd:
        """Gets a requested product ad.

        Note that the ProductAd object is designed for performance, and includes a small set of commonly used fields to reduce size. If the extended set of fields is required, use a product ad operations that returns the ProductAdResponseEx object.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the requested product ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_product_ad_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAd",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_product_ad_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the requested product ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProductAd]:
        """Gets a requested product ad.

        Note that the ProductAd object is designed for performance, and includes a small set of commonly used fields to reduce size. If the extended set of fields is required, use a product ad operations that returns the ProductAdResponseEx object.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the requested product ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_product_ad_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAd",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_product_ad_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the requested product ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a requested product ad.

        Note that the ProductAd object is designed for performance, and includes a small set of commonly used fields to reduce size. If the extended set of fields is required, use a product ad operations that returns the ProductAdResponseEx object.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the requested product ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_product_ad_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAd",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_product_ad_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        ad_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if ad_id is not None:
            _path_params['adId'] = ad_id
        # process the query parameters
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sd/productAds/{adId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_product_ad_response_ex(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the requested product ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProductAdResponseEx:
        """Gets extended information for a product ad.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the requested product ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_product_ad_response_ex_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAdResponseEx",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_product_ad_response_ex_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the requested product ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProductAdResponseEx]:
        """Gets extended information for a product ad.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the requested product ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_product_ad_response_ex_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAdResponseEx",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_product_ad_response_ex_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        ad_id: Annotated[StrictInt, Field(description="The identifier of the requested product ad.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets extended information for a product ad.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param ad_id: The identifier of the requested product ad. (required)
        :type ad_id: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_product_ad_response_ex_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            ad_id=ad_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProductAdResponseEx",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '404': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_product_ad_response_ex_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        ad_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if ad_id is not None:
            _path_params['adId'] = ad_id
        # process the query parameters
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sd/productAds/extended/{adId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def list_product_ads(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        start_index: Annotated[Optional[StrictInt], Field(description="Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.")] = None,
        count: Annotated[Optional[StrictInt], Field(description="Optional. Sets the number of ProductAd objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ad set `startIndex=0` and `count=10`. To return the next ten product ads, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.")] = None,
        state_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with campaigns that have state set to one of the values in the comma-delimited list.")] = None,
        ad_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.")] = None,
        ad_group_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.")] = None,
        campaign_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ProductAd]:
        """Gets a list of product ads.

        Gets an array of ProductAd objects for a requested set of Sponsored Display product ads. Note that the ProductAd object is designed for performance, and includes a small set of commonly used fields to reduce size. If the extended set of fields is required, use a product ad operation that returns the ProductAdResponseEx object.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param start_index: Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.
        :type start_index: int
        :param count: Optional. Sets the number of ProductAd objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ad set `startIndex=0` and `count=10`. To return the next ten product ads, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.
        :type count: int
        :param state_filter: Optional. The returned array is filtered to include only products ads associated with campaigns that have state set to one of the values in the comma-delimited list.
        :type state_filter: str
        :param ad_id_filter: Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.
        :type ad_id_filter: str
        :param ad_group_id_filter: Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.
        :type ad_group_id_filter: str
        :param campaign_id_filter: Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.
        :type campaign_id_filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            start_index=start_index,
            count=count,
            state_filter=state_filter,
            ad_id_filter=ad_id_filter,
            ad_group_id_filter=ad_group_id_filter,
            campaign_id_filter=campaign_id_filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ProductAd]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def list_product_ads_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        start_index: Annotated[Optional[StrictInt], Field(description="Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.")] = None,
        count: Annotated[Optional[StrictInt], Field(description="Optional. Sets the number of ProductAd objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ad set `startIndex=0` and `count=10`. To return the next ten product ads, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.")] = None,
        state_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with campaigns that have state set to one of the values in the comma-delimited list.")] = None,
        ad_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.")] = None,
        ad_group_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.")] = None,
        campaign_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ProductAd]]:
        """Gets a list of product ads.

        Gets an array of ProductAd objects for a requested set of Sponsored Display product ads. Note that the ProductAd object is designed for performance, and includes a small set of commonly used fields to reduce size. If the extended set of fields is required, use a product ad operation that returns the ProductAdResponseEx object.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param start_index: Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.
        :type start_index: int
        :param count: Optional. Sets the number of ProductAd objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ad set `startIndex=0` and `count=10`. To return the next ten product ads, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.
        :type count: int
        :param state_filter: Optional. The returned array is filtered to include only products ads associated with campaigns that have state set to one of the values in the comma-delimited list.
        :type state_filter: str
        :param ad_id_filter: Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.
        :type ad_id_filter: str
        :param ad_group_id_filter: Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.
        :type ad_group_id_filter: str
        :param campaign_id_filter: Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.
        :type campaign_id_filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            start_index=start_index,
            count=count,
            state_filter=state_filter,
            ad_id_filter=ad_id_filter,
            ad_group_id_filter=ad_group_id_filter,
            campaign_id_filter=campaign_id_filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ProductAd]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def list_product_ads_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        start_index: Annotated[Optional[StrictInt], Field(description="Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.")] = None,
        count: Annotated[Optional[StrictInt], Field(description="Optional. Sets the number of ProductAd objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ad set `startIndex=0` and `count=10`. To return the next ten product ads, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.")] = None,
        state_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with campaigns that have state set to one of the values in the comma-delimited list.")] = None,
        ad_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.")] = None,
        ad_group_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.")] = None,
        campaign_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a list of product ads.

        Gets an array of ProductAd objects for a requested set of Sponsored Display product ads. Note that the ProductAd object is designed for performance, and includes a small set of commonly used fields to reduce size. If the extended set of fields is required, use a product ad operation that returns the ProductAdResponseEx object.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param start_index: Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.
        :type start_index: int
        :param count: Optional. Sets the number of ProductAd objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ad set `startIndex=0` and `count=10`. To return the next ten product ads, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.
        :type count: int
        :param state_filter: Optional. The returned array is filtered to include only products ads associated with campaigns that have state set to one of the values in the comma-delimited list.
        :type state_filter: str
        :param ad_id_filter: Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.
        :type ad_id_filter: str
        :param ad_group_id_filter: Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.
        :type ad_group_id_filter: str
        :param campaign_id_filter: Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.
        :type campaign_id_filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            start_index=start_index,
            count=count,
            state_filter=state_filter,
            ad_id_filter=ad_id_filter,
            ad_group_id_filter=ad_group_id_filter,
            campaign_id_filter=campaign_id_filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ProductAd]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _list_product_ads_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        start_index,
        count,
        state_filter,
        ad_id_filter,
        ad_group_id_filter,
        campaign_id_filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if start_index is not None:
            
            _query_params.append(('startIndex', start_index))
            
        if count is not None:
            
            _query_params.append(('count', count))
            
        if state_filter is not None:
            
            _query_params.append(('stateFilter', state_filter))
            
        if ad_id_filter is not None:
            
            _query_params.append(('adIdFilter', ad_id_filter))
            
        if ad_group_id_filter is not None:
            
            _query_params.append(('adGroupIdFilter', ad_group_id_filter))
            
        if campaign_id_filter is not None:
            
            _query_params.append(('campaignIdFilter', campaign_id_filter))
            
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sd/productAds',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def list_product_ads_ex(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        start_index: Annotated[Optional[StrictInt], Field(description="Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.")] = None,
        count: Annotated[Optional[StrictInt], Field(description="Optional. Sets the number of ProduceAdEx objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ads set `startIndex=0` and `count=10`. To return the next ten campaigns, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.")] = None,
        state_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only campaigns with state set to one of the values in the specified comma-delimited list.")] = None,
        ad_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.")] = None,
        ad_group_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.")] = None,
        campaign_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ProductAdResponseEx]:
        """Gets a list of product ads with extended fields.

        Gets an array of ProductAdResponseEx objects for a set of requested ad groups. The ProductAdResponseEx object includes the extended set of available fields.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param start_index: Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.
        :type start_index: int
        :param count: Optional. Sets the number of ProduceAdEx objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ads set `startIndex=0` and `count=10`. To return the next ten campaigns, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.
        :type count: int
        :param state_filter: Optional. The returned array is filtered to include only campaigns with state set to one of the values in the specified comma-delimited list.
        :type state_filter: str
        :param ad_id_filter: Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.
        :type ad_id_filter: str
        :param ad_group_id_filter: Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.
        :type ad_group_id_filter: str
        :param campaign_id_filter: Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.
        :type campaign_id_filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_product_ads_ex_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            start_index=start_index,
            count=count,
            state_filter=state_filter,
            ad_id_filter=ad_id_filter,
            ad_group_id_filter=ad_group_id_filter,
            campaign_id_filter=campaign_id_filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ProductAdResponseEx]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def list_product_ads_ex_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        start_index: Annotated[Optional[StrictInt], Field(description="Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.")] = None,
        count: Annotated[Optional[StrictInt], Field(description="Optional. Sets the number of ProduceAdEx objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ads set `startIndex=0` and `count=10`. To return the next ten campaigns, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.")] = None,
        state_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only campaigns with state set to one of the values in the specified comma-delimited list.")] = None,
        ad_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.")] = None,
        ad_group_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.")] = None,
        campaign_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ProductAdResponseEx]]:
        """Gets a list of product ads with extended fields.

        Gets an array of ProductAdResponseEx objects for a set of requested ad groups. The ProductAdResponseEx object includes the extended set of available fields.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param start_index: Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.
        :type start_index: int
        :param count: Optional. Sets the number of ProduceAdEx objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ads set `startIndex=0` and `count=10`. To return the next ten campaigns, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.
        :type count: int
        :param state_filter: Optional. The returned array is filtered to include only campaigns with state set to one of the values in the specified comma-delimited list.
        :type state_filter: str
        :param ad_id_filter: Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.
        :type ad_id_filter: str
        :param ad_group_id_filter: Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.
        :type ad_group_id_filter: str
        :param campaign_id_filter: Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.
        :type campaign_id_filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_product_ads_ex_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            start_index=start_index,
            count=count,
            state_filter=state_filter,
            ad_id_filter=ad_id_filter,
            ad_group_id_filter=ad_group_id_filter,
            campaign_id_filter=campaign_id_filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ProductAdResponseEx]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def list_product_ads_ex_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        start_index: Annotated[Optional[StrictInt], Field(description="Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.")] = None,
        count: Annotated[Optional[StrictInt], Field(description="Optional. Sets the number of ProduceAdEx objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ads set `startIndex=0` and `count=10`. To return the next ten campaigns, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.")] = None,
        state_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only campaigns with state set to one of the values in the specified comma-delimited list.")] = None,
        ad_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.")] = None,
        ad_group_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.")] = None,
        campaign_id_filter: Annotated[Optional[StrictStr], Field(description="Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a list of product ads with extended fields.

        Gets an array of ProductAdResponseEx objects for a set of requested ad groups. The ProductAdResponseEx object includes the extended set of available fields.

        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param start_index: Optional. Sets a cursor into the requested set of product ads. Use in conjunction with the `count` parameter to control pagination of the returned array. 0-indexed record offset for the result set, defaults to 0.
        :type start_index: int
        :param count: Optional. Sets the number of ProduceAdEx objects in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten product ads set `startIndex=0` and `count=10`. To return the next ten campaigns, set `startIndex=10` and `count=10`, and so on. Defaults to max page size.
        :type count: int
        :param state_filter: Optional. The returned array is filtered to include only campaigns with state set to one of the values in the specified comma-delimited list.
        :type state_filter: str
        :param ad_id_filter: Optional. The returned array includes only product ads with identifiers matching those in the comma-delimited string.
        :type ad_id_filter: str
        :param ad_group_id_filter: Optional. The returned array is filtered to include only products ads associated with ad groups identifiers in the comma-delimited list.
        :type ad_group_id_filter: str
        :param campaign_id_filter: Optional. The returned array is filtered to include only product ads associated with the campaign identifiers in the comma-delimited list.
        :type campaign_id_filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._list_product_ads_ex_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            start_index=start_index,
            count=count,
            state_filter=state_filter,
            ad_id_filter=ad_id_filter,
            ad_group_id_filter=ad_group_id_filter,
            campaign_id_filter=campaign_id_filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ProductAdResponseEx]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _list_product_ads_ex_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        start_index,
        count,
        state_filter,
        ad_id_filter,
        ad_group_id_filter,
        campaign_id_filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if start_index is not None:
            
            _query_params.append(('startIndex', start_index))
            
        if count is not None:
            
            _query_params.append(('count', count))
            
        if state_filter is not None:
            
            _query_params.append(('stateFilter', state_filter))
            
        if ad_id_filter is not None:
            
            _query_params.append(('adIdFilter', ad_id_filter))
            
        if ad_group_id_filter is not None:
            
            _query_params.append(('adGroupIdFilter', ad_group_id_filter))
            
        if campaign_id_filter is not None:
            
            _query_params.append(('campaignIdFilter', campaign_id_filter))
            
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/sd/productAds/extended',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def update_product_ads(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        update_product_ad: Annotated[Optional[List[UpdateProductAd]], Field(description="An array of ProductAd objects. For each object, specify a product ad identifier and the only mutable field, `state`. Maximum length of the array is 100 objects.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ProductAdResponse]:
        """Updates one or more product ads.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param update_product_ad: An array of ProductAd objects. For each object, specify a product ad identifier and the only mutable field, `state`. Maximum length of the array is 100 objects.
        :type update_product_ad: List[UpdateProductAd]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            update_product_ad=update_product_ad,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "List[ProductAdResponse]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def update_product_ads_with_http_info(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        update_product_ad: Annotated[Optional[List[UpdateProductAd]], Field(description="An array of ProductAd objects. For each object, specify a product ad identifier and the only mutable field, `state`. Maximum length of the array is 100 objects.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ProductAdResponse]]:
        """Updates one or more product ads.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param update_product_ad: An array of ProductAd objects. For each object, specify a product ad identifier and the only mutable field, `state`. Maximum length of the array is 100 objects.
        :type update_product_ad: List[UpdateProductAd]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            update_product_ad=update_product_ad,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "List[ProductAdResponse]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def update_product_ads_without_preload_content(
        self,
        amazon_advertising_api_client_id: Annotated[StrictStr, Field(description="The identifier of a client associated with a \"Login with Amazon\" account.")],
        amazon_advertising_api_scope: Annotated[StrictStr, Field(description="The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.")],
        update_product_ad: Annotated[Optional[List[UpdateProductAd]], Field(description="An array of ProductAd objects. For each object, specify a product ad identifier and the only mutable field, `state`. Maximum length of the array is 100 objects.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Updates one or more product ads.


        :param amazon_advertising_api_client_id: The identifier of a client associated with a \"Login with Amazon\" account. (required)
        :type amazon_advertising_api_client_id: str
        :param amazon_advertising_api_scope: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. (required)
        :type amazon_advertising_api_scope: str
        :param update_product_ad: An array of ProductAd objects. For each object, specify a product ad identifier and the only mutable field, `state`. Maximum length of the array is 100 objects.
        :type update_product_ad: List[UpdateProductAd]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_product_ads_serialize(
            amazon_advertising_api_client_id=amazon_advertising_api_client_id,
            amazon_advertising_api_scope=amazon_advertising_api_scope,
            update_product_ad=update_product_ad,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '207': "List[ProductAdResponse]",
            '400': "Error",
            '401': "Error",
            '403': "Error",
            '422': "Error",
            '429': "Error",
            '500': "Error",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _update_product_ads_serialize(
        self,
        amazon_advertising_api_client_id,
        amazon_advertising_api_scope,
        update_product_ad,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
            'UpdateProductAd': '',
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if amazon_advertising_api_client_id is not None:
            _header_params['Amazon-Advertising-API-ClientId'] = amazon_advertising_api_client_id
        if amazon_advertising_api_scope is not None:
            _header_params['Amazon-Advertising-API-Scope'] = amazon_advertising_api_scope
        # process the form parameters
        # process the body parameter
        if update_product_ad is not None:
            _body_params = update_product_ad


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/sd/productAds',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


