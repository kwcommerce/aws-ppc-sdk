# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative_moderation import CreativeModeration

class TestCreativeModeration(unittest.TestCase):
    """CreativeModeration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativeModeration:
        """Test CreativeModeration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativeModeration`
        """
        model = CreativeModeration()
        if include_optional:
            return CreativeModeration(
                creative_id = 1.337,
                creative_type = 'IMAGE',
                moderation_status = 'APPROVED',
                eta_for_moderation = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                policy_violations = [
                    openapi_client.models.creative_moderation_policy_violations_inner.CreativeModeration_policyViolations_inner(
                        policy_description = '', 
                        policy_link_url = '', 
                        violating_headline_contents = [
                            openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner.CreativeModeration_policyViolations_inner_violatingHeadlineContents_inner(
                                reviewed_text = '', 
                                text_evidence = [
                                    openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner_text_evidence_inner.CreativeModeration_policyViolations_inner_violatingHeadlineContents_inner_textEvidence_inner(
                                        violating_text = '', 
                                        violating_text_position = openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner_text_evidence_inner_violating_text_position.CreativeModeration_policyViolations_inner_violatingHeadlineContents_inner_textEvidence_inner_violatingTextPosition(
                                            start = 56, 
                                            end = 56, ), )
                                    ], )
                            ], 
                        violating_brand_logo_contents = [
                            openapi_client.models.creative_moderation_policy_violations_inner_violating_brand_logo_contents_inner.CreativeModeration_policyViolations_inner_violatingBrandLogoContents_inner(
                                reviewed_image_url = '', 
                                image_evidences = [
                                    openapi_client.models.creative_moderation_policy_violations_inner_violating_brand_logo_contents_inner_image_evidences_inner.CreativeModeration_policyViolations_inner_violatingBrandLogoContents_inner_imageEvidences_inner(
                                        violating_image_crop = openapi_client.models.creative_moderation_policy_violations_inner_violating_brand_logo_contents_inner_image_evidences_inner_violating_image_crop.CreativeModeration_policyViolations_inner_violatingBrandLogoContents_inner_imageEvidences_inner_violatingImageCrop(
                                            top_left_x = 56, 
                                            top_left_y = 56, 
                                            height = 56, 
                                            width = 56, ), )
                                    ], )
                            ], 
                        violating_custom_image_contents = [
                            openapi_client.models.creative_moderation_policy_violations_inner_violating_brand_logo_contents_inner.CreativeModeration_policyViolations_inner_violatingBrandLogoContents_inner(
                                reviewed_image_url = '', )
                            ], 
                        violating_video_contents = [
                            openapi_client.models.creative_moderation_policy_violations_inner_violating_video_contents_inner.CreativeModeration_policyViolations_inner_violatingVideoContents_inner(
                                reviewed_video_url = '', 
                                video_evidences = [
                                    openapi_client.models.creative_moderation_policy_violations_inner_violating_video_contents_inner_video_evidences_inner.CreativeModeration_policyViolations_inner_violatingVideoContents_inner_videoEvidences_inner(
                                        violating_video_position = openapi_client.models.creative_moderation_policy_violations_inner_violating_video_contents_inner_video_evidences_inner_violating_video_position.CreativeModeration_policyViolations_inner_violatingVideoContents_inner_videoEvidences_inner_violatingVideoPosition(
                                            start = 56, 
                                            end = 56, ), )
                                    ], )
                            ], )
                    ]
            )
        else:
            return CreativeModeration(
                creative_id = 1.337,
                creative_type = 'IMAGE',
                moderation_status = 'APPROVED',
                eta_for_moderation = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                policy_violations = [
                    openapi_client.models.creative_moderation_policy_violations_inner.CreativeModeration_policyViolations_inner(
                        policy_description = '', 
                        policy_link_url = '', 
                        violating_headline_contents = [
                            openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner.CreativeModeration_policyViolations_inner_violatingHeadlineContents_inner(
                                reviewed_text = '', 
                                text_evidence = [
                                    openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner_text_evidence_inner.CreativeModeration_policyViolations_inner_violatingHeadlineContents_inner_textEvidence_inner(
                                        violating_text = '', 
                                        violating_text_position = openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner_text_evidence_inner_violating_text_position.CreativeModeration_policyViolations_inner_violatingHeadlineContents_inner_textEvidence_inner_violatingTextPosition(
                                            start = 56, 
                                            end = 56, ), )
                                    ], )
                            ], 
                        violating_brand_logo_contents = [
                            openapi_client.models.creative_moderation_policy_violations_inner_violating_brand_logo_contents_inner.CreativeModeration_policyViolations_inner_violatingBrandLogoContents_inner(
                                reviewed_image_url = '', 
                                image_evidences = [
                                    openapi_client.models.creative_moderation_policy_violations_inner_violating_brand_logo_contents_inner_image_evidences_inner.CreativeModeration_policyViolations_inner_violatingBrandLogoContents_inner_imageEvidences_inner(
                                        violating_image_crop = openapi_client.models.creative_moderation_policy_violations_inner_violating_brand_logo_contents_inner_image_evidences_inner_violating_image_crop.CreativeModeration_policyViolations_inner_violatingBrandLogoContents_inner_imageEvidences_inner_violatingImageCrop(
                                            top_left_x = 56, 
                                            top_left_y = 56, 
                                            height = 56, 
                                            width = 56, ), )
                                    ], )
                            ], 
                        violating_custom_image_contents = [
                            openapi_client.models.creative_moderation_policy_violations_inner_violating_brand_logo_contents_inner.CreativeModeration_policyViolations_inner_violatingBrandLogoContents_inner(
                                reviewed_image_url = '', )
                            ], 
                        violating_video_contents = [
                            openapi_client.models.creative_moderation_policy_violations_inner_violating_video_contents_inner.CreativeModeration_policyViolations_inner_violatingVideoContents_inner(
                                reviewed_video_url = '', 
                                video_evidences = [
                                    openapi_client.models.creative_moderation_policy_violations_inner_violating_video_contents_inner_video_evidences_inner.CreativeModeration_policyViolations_inner_violatingVideoContents_inner_videoEvidences_inner(
                                        violating_video_position = openapi_client.models.creative_moderation_policy_violations_inner_violating_video_contents_inner_video_evidences_inner_violating_video_position.CreativeModeration_policyViolations_inner_violatingVideoContents_inner_videoEvidences_inner_violatingVideoPosition(
                                            start = 56, 
                                            end = 56, ), )
                                    ], )
                            ], )
                    ],
        )
        """

    def testCreativeModeration(self):
        """Test CreativeModeration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
