# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sd_targeting_recommendations_request_v35 import SDTargetingRecommendationsRequestV35

class TestSDTargetingRecommendationsRequestV35(unittest.TestCase):
    """SDTargetingRecommendationsRequestV35 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SDTargetingRecommendationsRequestV35:
        """Test SDTargetingRecommendationsRequestV35
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SDTargetingRecommendationsRequestV35`
        """
        model = SDTargetingRecommendationsRequestV35()
        if include_optional:
            return SDTargetingRecommendationsRequestV35(
                tactic = 'T00020',
                products = [{"asin":"B00PN11UNW"}],
                type_filter = ["PRODUCT","CATEGORY","AUDIENCE","CONTENT_CATEGORY"],
                themes = openapi_client.models.sd_targeting_recommendations_themes.SDTargetingRecommendationsThemes(
                    product = [
                        openapi_client.models.sd_product_targeting_theme.SDProductTargetingTheme(
                            name = '/jUR,rZ0', 
                            expression = [
                                openapi_client.models.sd_product_targeting_theme_expression.SDProductTargetingThemeExpression(
                                    type = 'asinPriceGreaterThan', )
                                ], )
                        ], ),
                category_type = 'views',
                location_expression = [
                    openapi_client.models.location_expression.LocationExpression(
                        type = 'location', 
                        value = 'amzn1.ad-geo.XHvCjcKHXmJ7woVowo7CjmvCjcKWbMKHwp3CsGvCk8KrcmstQ2l0eQ==', )
                    ]
            )
        else:
            return SDTargetingRecommendationsRequestV35(
                tactic = 'T00020',
                products = [{"asin":"B00PN11UNW"}],
                type_filter = ["PRODUCT","CATEGORY","AUDIENCE","CONTENT_CATEGORY"],
        )
        """

    def testSDTargetingRecommendationsRequestV35(self):
        """Test SDTargetingRecommendationsRequestV35"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
