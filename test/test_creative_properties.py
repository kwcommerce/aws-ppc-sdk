# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative_properties import CreativeProperties

class TestCreativeProperties(unittest.TestCase):
    """CreativeProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativeProperties:
        """Test CreativeProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativeProperties`
        """
        model = CreativeProperties()
        if include_optional:
            return CreativeProperties(
                headline = '',
                has_terms_and_conditions = True,
                brand_logo = openapi_client.models.image.Image(
                    asset_id = '', 
                    asset_version = '', 
                    cropping_coordinates = openapi_client.models.image_cropping_coordinates.Image_croppingCoordinates(
                        top = 0, 
                        left = 0, 
                        width = 0, 
                        height = 0, ), ),
                rect_custom_image = openapi_client.models.image.Image(
                    asset_id = '', 
                    asset_version = '', 
                    cropping_coordinates = openapi_client.models.image_cropping_coordinates.Image_croppingCoordinates(
                        top = 0, 
                        left = 0, 
                        width = 0, 
                        height = 0, ), ),
                square_custom_image = openapi_client.models.image.Image(
                    asset_id = '', 
                    asset_version = '', 
                    cropping_coordinates = openapi_client.models.image_cropping_coordinates.Image_croppingCoordinates(
                        top = 0, 
                        left = 0, 
                        width = 0, 
                        height = 0, ), ),
                square_images = [
                    openapi_client.models.image.Image(
                        asset_id = '', 
                        asset_version = '', 
                        cropping_coordinates = openapi_client.models.image_cropping_coordinates.Image_croppingCoordinates(
                            top = 0, 
                            left = 0, 
                            width = 0, 
                            height = 0, ), )
                    ],
                horizontal_images = [
                    openapi_client.models.image.Image(
                        asset_id = '', 
                        asset_version = '', 
                        cropping_coordinates = openapi_client.models.image_cropping_coordinates.Image_croppingCoordinates(
                            top = 0, 
                            left = 0, 
                            width = 0, 
                            height = 0, ), )
                    ],
                vertical_images = [
                    openapi_client.models.image.Image(
                        asset_id = '', 
                        asset_version = '', 
                        cropping_coordinates = openapi_client.models.image_cropping_coordinates.Image_croppingCoordinates(
                            top = 0, 
                            left = 0, 
                            width = 0, 
                            height = 0, ), )
                    ],
                video = openapi_client.models.video.Video(
                    asset_id = '', 
                    asset_version = '', ),
                backgrounds = [
                    openapi_client.models.background.Background(
                        color = '', )
                    ],
                call_to_actions = [
                    openapi_client.models.call_to_action.CallToAction(
                        call_to_action_type = 'SIGN_UP', 
                        properties = openapi_client.models.call_to_action_properties.CallToAction_properties(
                            lead_form_id = '', ), )
                    ]
            )
        else:
            return CreativeProperties(
        )
        """

    def testCreativeProperties(self):
        """Test CreativeProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
