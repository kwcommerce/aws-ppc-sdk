# coding: utf-8

"""
    merged spec

    merged spec

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner import CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner

class TestCreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner(unittest.TestCase):
    """CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner:
        """Test CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner`
        """
        model = CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner()
        if include_optional:
            return CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner(
                reviewed_text = '',
                text_evidence = [
                    openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner_text_evidence_inner.CreativeModeration_policyViolations_inner_violatingHeadlineContents_inner_textEvidence_inner(
                        violating_text = '', 
                        violating_text_position = openapi_client.models.creative_moderation_policy_violations_inner_violating_headline_contents_inner_text_evidence_inner_violating_text_position.CreativeModeration_policyViolations_inner_violatingHeadlineContents_inner_textEvidence_inner_violatingTextPosition(
                            start = 56, 
                            end = 56, ), )
                    ]
            )
        else:
            return CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner(
        )
        """

    def testCreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner(self):
        """Test CreativeModerationPolicyViolationsInnerViolatingHeadlineContentsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
